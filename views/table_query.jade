extends layout

block content
	p #{table}: Query
	p
		| Enter a where clause to retrieve a subset of features from this table
	form(action='',method='post')
		table.inputTable
			tr
				td
					label(for='where') Where
				td
					input(id='where',type='text',value=where,placeholder='where',name='where')

			tr
				td
					label(for='returnfields') Return Fields
				td
					input(id='returnfields',type='text',value=returnfields,placeholder='field1,field2',name='returnfields')


			tr
				td
					label(for='format') Format
				td
					select(id='format',name='format')
						formatlist = [ 'html', 'json']
							for item in formatlist
								option #{item}
			tr
				td
					span Return geometry
				td
					-if(!returnGeometry || returnGeometry == 'yes'){
						label(for='optionsRadios1') Yes
						input(type="radio", name="returnGeometry", id="optionsRadios1", value="yes", checked="") Yes
						label(for='optionsRadios2') No
						input(type="radio", name="returnGeometry", id="optionsRadios2", value="no") No
					-}else{
						label(for='optionsRadios1') Yes
						input(type="radio", name="returnGeometry", id="optionsRadios1", value="yes") Yes
						label(for='optionsRadios2') No
						input(type="radio", name="returnGeometry", id="optionsRadios2", value="no", checked="") No
					-}
		
			tr
				td
					label(for='groupby') Group By Fields
				td
					input(id='groupby',type='text',value=groupby,placeholder='field2,field3',name='groupby')
		
			tr
				td
					label(for='stats') Statistics definition
				td
					textarea(id='stats',placeholder='count:field1',name='stats')




		div(data-role='fieldcontain')   
			input(type='submit',value='Submit',data-transition='fade', data-theme='c')

		- if(table_details){
			table
				thead
					tr
						th Columns
				tbody
			
					- var items = table_details
					- each item in items
						tr
							td= item.column_name + " (" + item.data_type + ")"
		-}


block sidebar
	.widget
		h1 Results
		.results
			- if (featureCollection){
				-if(featureCollection.features){
					i # records: #{featureCollection.features.length}
					each val, key in featureCollection.features
						div.propertyGroup
							each ival, ikey in val.properties
								div.property #{ikey}: #{ival}
							-if(val.geometry){
								-if(val.geometry.geometries){
									each mgval, mgkey in val.geometry.geometries
										-if(mgval.coordinates){
											div.geometries #{mgval.type}: #{mgval.coordinates}
										-}
								-}else{
									each gval, gkey in val.geometry
										div.geometry #{gkey}: #{gval}
								-}
							-}
				-}else{
					div.propertyGroup No results found
				-}
			-}
			