extends layout

block content
	p
		| Enter a where clause to retrieve a subset of features from this table
	form(action='',method='post')
		table.inputTable
			tr
				td
					label(for='where') Where
				td
					input(id='where',type='text',value=where,placeholder='where',name='where')

			tr
				td
					label(for='returnfields') Return Fields
				td
					input(id='returnfields',type='text',value=returnfields,placeholder='field1,field2',name='returnfields')


			tr
				td
					label(for='format') Format
				td
					select(id='format',name='format')
						formatlist = [ 'html', 'GeoJSON', 'esriJSON']
							for item in formatlist
								option #{item}
			tr
				td
					span Return geometry
				td
					-if(!returnGeometry || returnGeometry == 'yes'){
						label(for='optionsRadios1') Yes
						input(type="radio", name="returnGeometry", id="optionsRadios1", value="yes", checked="") Yes
						label(for='optionsRadios2') No
						input(type="radio", name="returnGeometry", id="optionsRadios2", value="no") No
					-}else{
						label(for='optionsRadios1') Yes
						input(type="radio", name="returnGeometry", id="optionsRadios1", value="yes") Yes
						label(for='optionsRadios2') No
						input(type="radio", name="returnGeometry", id="optionsRadios2", value="no", checked="") No
					-}
			
			tr
				td
					span Return feature envelope(s)
				td
					-if(!returnGeometryEnvelopes || returnGeometryEnvelopes == 'no'){
						label(for='optionsGeomEnv1') Yes
						input(type="radio", name="returnGeometryEnvelopes", id="optionsGeomEnv1", value="yes") Yes
						label(for='optionsGeomEnv2') No
						input(type="radio", name="returnGeometryEnvelopes", id="optionsGeomEnv2", value="no", checked="") No
					-}else{
						label(for='optionsGeomEnv1') Yes
						input(type="radio", name="returnGeometryEnvelopes", id="optionsGeomEnv1", value="yes", checked="") Yes
						label(for='optionsGeomEnv2') No
						input(type="radio", name="returnGeometryEnvelopes", id="optionsGeomEnv2", value="no") No
					-}

			tr
				td
					label(for='groupby') Group By Fields
				td
					input(id='groupby',type='text',value=groupby,placeholder='field2,field3',name='groupby')

			tr
				td
					label(for='outputsrid') Output SRID
				td
					input(id='outputsrid',type='text',value=outputsrid,placeholder='3857',name='outputsrid')
		
			tr
				td
					label(for='statsdef') Statistics definition
				td
					textarea(id='statsdef',placeholder='count:field1,sum:field2',name='statsdef')
						|#{statsdef}
			
			tr
				td
					label(for='wkt') Well Known Text (WKT) Geometry
				td
					textarea(id='wkt',placeholder='POLYGON((85.341 25.811,85.523 25.838,85.665 25.719,85.479 25.598,85.278 25.687,85.341 25.811))',name='wkt')
						|#{wkt}
		div(data-role='fieldcontain')   
			input(type='submit',value='Submit',data-transition='fade', data-theme='c')

	
	- var requestSample = []
	-if(where)
		- requestSample.push("where=" + encodeURIComponent(where))

	-if(returnfields)
		- requestSample.push("returnfields=" + encodeURIComponent(returnfields))
	
	-if(format)
		- requestSample.push("format=" + encodeURIComponent(format))

	-if(returnGeometry)
		- requestSample.push("returnGeometry=" + encodeURIComponent(returnGeometry))

	-if(returnGeometryEnvelopes)
		- requestSample.push("returnGeometryEnvelopes=" + encodeURIComponent(returnGeometryEnvelopes))

	-if(groupby)
		- requestSample.push("groupby=" + encodeURIComponent(groupby))

	-if(statsdef)
		- requestSample.push("statsdef=" + encodeURIComponent(statsdef))

	-if(wkt)
		- requestSample.push("wkt=" + encodeURIComponent(wkt))


	-if(requestSample.length > 0){
		h3: |Request Sample
		div#requestSample
			|#{"http://" + host + path + "?" + requestSample.join("&")}
	-}

	-if(infoMessage){
		div.infoMessage
			|#{infoMessage}
	-}
	-if(errorMessage){
		div.errorMessage
			|#{errorMessage}
	-}


block sidebar
	.widget
		h1 Results
		.results
			- if (featureCollection){
				-if(featureCollection.features){
					i # records: #{featureCollection.features.length}
					each val, key in featureCollection.features
						div.propertyGroup
							each ival, ikey in val.properties
								-if(ival && ival.coordinates){
									each egval, egkey in ival
										div.geometry #{ikey}: #{egkey}: #{egval}
								-}else{
									div.property #{ikey}: #{ival}
								-}
								
							-if(val.geometry){
								-if(val.geometry.geometries){
									each mgval, mgkey in val.geometry.geometries
										-if(mgval.coordinates){
											div.geometries #{mgval.type}: #{mgval.coordinates}
										-}
								-}else{
									each gval, gkey in val.geometry
										div.geometry geometry: #{gkey}: #{gval}
								-}
							-}
							
				-}else{
					div.propertyGroup No results found
				-}
			-}
			